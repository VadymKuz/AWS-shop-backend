openapi: 3.0.0
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Product identifier
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: number
          description: Product price
        count:
          type: number
          description: Product amount
        imageUrl:
          type: string
          description: Product imageUrl
    ProductList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    ServiceError:
      type: object
      properties:
        statusCode:
          type: number
          description: Status code of error
        message:
          type: string
          description: Error message
    CreateProduct:
      type: object
      properties:
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: number
          description: Product price
        imageUrl:
          type: string
          description: Product image url
        amount:
          type: number
          description: Amount of products
info:
  title: ''
  description: ''
  version: a15d4b5d-6b5c-48e0-8146-3072d82c51fc
paths:
  /products:
    get:
      operationId: getProducts
      description: Get all products
      parameters: []
      responses:
        '200':
          description: Status 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        '500':
          description: Status 500 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    post:
      operationId: createProduct
      description: Create product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
      parameters: []
      responses:
        '200':
          description: Status 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Status 400 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        '404':
          description: Status 404 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        '500':
          description: Status 500 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
  '/products/{id}':
    get:
      operationId: getProductById
      description: Get product by productId
      parameters:
        - name: productId
          in: path
          description: Product identifier
          required: true
      responses:
        '200':
          description: Status 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Status 404 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        '500':
          description: Status 500 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
